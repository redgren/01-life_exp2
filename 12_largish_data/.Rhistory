'Bike number' = col_character(),
'Member Type' = col_character()
))
library(tidyverse)
trip <- read_csv(file = "./capital_trips_2016(1).csv",
col_types = cols(
'Duration (ms)' = col_double(),
'Start date' = col_character(),
'End date' = col_character(),
'Start station number' = col_double(),
'Start station' = col_character(),
'End station number' = col_character(),
'Bike number' = col_character(),
'Member Type' = col_character()
))
trip <- read_csv(file = "./data/capital_trips_2016(1).csv",
col_types = cols(
'Duration (ms)' = col_double(),
'Start date' = col_character(),
'End date' = col_character(),
'Start station number' = col_double(),
'Start station' = col_character(),
'End station number' = col_character(),
'Bike number' = col_character(),
'Member Type' = col_character()
))
trip <- read_csv(file = "./data/capital_trips_2016.csv",
col_types = cols(
'Duration (ms)' = col_double(),
'Start date' = col_character(),
'End date' = col_character(),
'Start station number' = col_double(),
'Start station' = col_character(),
'End station number' = col_character(),
'Bike number' = col_character(),
'Member Type' = col_character()
))
stations <-read_csv(file = "./data/capital_stations.csv",
col_types = cols(
id = col_double(),
name = col_character(),
terminalName = col_double(),
lastCommWithServer = col_double(),
lat = col_double(),
long = col_double(),
installed = col_logical(),
installDate = col_double(),
removalDate = col_double(),
temporary = col_logical(),
public = col_logical(),
capacity = col_double()
))
head(trip, n=5)
head(stations, n=5)
colnames(trip)
rename(trip,
duration = 'Duration (ms)',
start_time = 'Start date',
end_time = 'End date',
start_station_n = 'Start station number',
start_station = 'Start station',
end_station_n = 'End station number',
end_station = 'End station',
bike_n = 'Bike number',
member_Type = 'Member Type') -> newtrip
head(newtrip, n=5)
library(lubridate)
newtrip%>%
mutate(start_time = ymd_hms(parse_date_time(newtrip$start_time, "%m/%d/%Y %H:%M", tz = "America/New_York")),
end_time = ymd_hms(parse_date_time(newtrip$end_time, "%m/%d/%Y %H:%M", tz = "America/New_York"))) -> newtrip2
newtrip2
library(tidyverse)
library(lubridate)
trips    <- read_csv("./data/capital_trips_2016.csv")
stations <- read_csv("./data/capital_stations.csv")
ggplot(sumdf, aes(x = mean_num_trips, y = wday))+
geom_point()+
theme_bw()+
labs( x = "Mean Number of Trips", y = "Weekday")
library(tidyverse)
library(lubridate)
trips    <- read_csv("./data/capital_trips_2016.csv")
stations <- read_csv("./data/capital_stations.csv")
## rename the poorly named variables
trips %>%
rename(duration             = `Duration (ms)`,
start_time           = `Start date`,
end_time             = `End date`,
start_station_number = `Start station number`,
start_station        = `Start station`,
end_station_number   = `End station number`,
end_station          = `End station`,
bike_number          = `Bike number`,
member_type          = `Member Type`) ->
trips
trips %>%
mutate(start_time = mdy_hm(start_time, tz = "America/New_York"),
end_time = mdy_hm(end_time, tz = "America/New_York")) ->
trips
head(trips)
trips %>%
mutate(wday = wday(start_time, label = TRUE, abbr = TRUE),
mday = mday(start_time)) %>%
group_by(wday, mday) %>%
summarize(num_trips = n()) %>%
ungroup() %>%
group_by(wday) %>%
summarize(mean_num_trips = mean(num_trips)) ->
sumdf
sumdf
# or
trips %>%
mutate(wday = wday(start_time, label = TRUE, abbr = TRUE),
yday = yday(start_time)) %>%
group_by(wday, yday) %>%
summarize(num_trips = n()) %>%
ungroup() %>%
group_by(wday) %>%
summarize(mean_num_trips = mean(num_trips)) ->
sumdf
sumdf
sumdf %>%
mutate(wday = fct_rev(wday)) %>%
ggplot(aes(x = mean_num_trips, y = wday)) +
geom_point() +
xlab("Mean Number of Trips") +
ylab("Weekday") +
theme_bw()
knitr::opts_chunk$set(echo       = params$solutions,
eval       = params$solutions,
fig.align  = "center",
fig.height = 3,
fig.width  = 5)
sumdf %>%
mutate(wday = fct_expand(wday, "Foo")) %>% view()
sumdf %>%
mutate(wday = fct_expand(wday, "Foo")) %>%
mutate(wday = fct_relevel(wday, "Foo")) ->
sumdf
View(sumdf)
head(stations)
start_installdate <- mdy_hms("January 1, 1970, 00:00:00", tz = "America/New_York")
newinstallDate <- as_datetime(stations$installDate, tz = "America/New_York" )
class(newinstallDate)
stations%>%
mutate(
installDate = start_installdate + day(mdy_hms(newinstallDate)))
View(stations)
monkeymem <- fread("../data/tidy_exercise/monkeymem.csv")
monkeymem <- fread("./data/tidy_exercise/monkeymem.csv")
monkeymem <- fread("./data/monkeymem.csv")
melt(monkeymem,
id.vars       = c("Monkey", "Treatment"),
measure.vars  = c("Week2", "Week4", "Week8", "Week12", "Week16"),
variable.name = "Week", value.name = "Percent")
flowers1 <- fread("./data/flowers1.csv")
dcast(flowers1, Time + replication ~ Variable, value.var = "Value")
flowers2 <- fread("./data/flowers2.csv")
flowers2[, c("Flowers", "Intensity") := tstrsplit(`Flowers/Intensity`, split = "/")]
flowers2[, `Flowers/Intensity` := NULL]
flowers2
## data.table way
dt5[, year := paste(century, year, sep = "")]
dt5 <- as.data.table(tidyr::table5)
dt5
## data.table way
dt5[, year := paste(century, year, sep = "")]
dt5[, century := NULL]
dt5
## Equivalent tidyverse way
tidyr::table5 %>%
unite(century, year, col = "year", sep = "")
flowers2[, flowers_intensity := .(paste(Flowers, Intensity, sep = ","))]
flowers2[, c("Flowers", "Intensity") := .(NULL, NULL)]
flowers2
xdf <- data.table(mykey = c("1", "2", "3"),
x_val = c("x1", "x2", "x3"))
ydf <- data.table(mykey = c("1", "2", "4"),
y_val = c("y1", "y2", "y3"))
xdf
ydf
names(ydf)[1] <- "newkey"
ydf
flights_sub <- merge(flights, planes[, .(tailnum)], by = "tailnum")
library(nycflights13)
data("flights")
data("airlines")
data("planes")
flights  <- as.data.table(flights)
airlines <- as.data.table(airlines)
planes   <- as.data.table(planes)
flights <- merge(flights, airlines, by = "carrier")
flights_sub <- merge(flights, planes[, .(tailnum)], by = "tailnum")
sort(unique(flights$hour))
sort(unique(flights_tib$hour))
klippy::klippy()
set.seed(1)
knitr::opts_chunk$set(echo       = TRUE,
fig.height = 3,
fig.width  = 6,
fig.align  = "center")
ggplot2::theme_set(ggplot2::theme_bw())
library(tidyverse)
library(data.table)
inputf <- if (file.exists("./data/flights14.csv")) {
"./data/flights14.csv"
} else {
"https://raw.githubusercontent.com/Rdatatable/data.table/master/vignettes/flights14.csv"
}
start_time <- Sys.time()
flights <- fread(inputf)
end_time = Sys.time()
times <- tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time))
class(flights)
start_time <- Sys.time()
flights_tib <- read_csv(inputf)
end_time = Sys.time()
times <- bind_rows(times,tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time)))
round(100*(times[2,3]-times[1,3])/times[1,3],1)
inspectdf::inspect_mem(flights, df2 = flights_tib, show_plot = FALSE)
class(flights_tib)
inputf2 <- "../../../Data_Sets/BPD_crime_files/BPD_Part_1_Victim_Based_Crime_Data.csv"
start_time <- Sys.time()
bpd_crime <- fread(inputf2)
end_time = Sys.time()
times2 <- tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time))
start_time <- Sys.time()
bpd_crime_tib <- read_csv(inputf2)
end_time = Sys.time()
times2 <- bind_rows(times2,tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time)))
round(100*(times2[2,3]-times2[1,3])/times2[1,3],1)
inspectdf::inspect_mem(bpd_crime, df2 = bpd_crime_tib, show_plot = FALSE)
rm(inputf2, bpd_crime,bpd_crime_tib, end_time, start_time)
temp_dt <- as.data.table(flights_tib)
class(temp_dt)
rm(temp_dt)
## data.table way
flights[origin == "JFK" & dest == "LAX"]
## equivalent tidyverse way
flights_tib %>%
filter(origin == "JFK", dest == "LAX")
## data.table way
flights[c(1, 3, 207)]
## equivalent tidyverse way
flights_tib %>%
slice(1, 3, 207)
## data.table way
flights[order(origin, -dest)]
## equivalent tidyverse way
flights_tib %>%
arrange(origin, desc(dest))
## data.table way
fl1 <- flights[origin == "EWR" | origin == "LGA"]
fl1[order(-dep_delay)]
## equivalent tidyverse way
flights_tib %>%
filter(origin == "EWR" | origin == "LGA") %>%
arrange(desc(dep_delay))
flights[,dest] %>% glimpse()
flights[,.(dest)] %>% str()
## data.table way
flights[, .(origin, dest)]
## Or
flights[, list(origin, dest)]
## equivalent tidyverse way
flights_tib %>%
select(origin, dest)
flights[, c("origin", "dest")]
flights[, origin:dest]
keep_vec <- c("origin", "dest")
flights[, ..keep_vec] %>% head()
flights[, keep_vec, with = FALSE] %>% head()
flights[, .(delay_arr = arr_delay, delay_dep = dep_delay)] %>% head()
flights[, !c("year", "month")] %>% head()
flights[, -(year:month)]  %>% head()
flights[, .(year, month, day, hour)]
flights[origin == "JFK", .(dep_delay)]
flights[, sum( (arr_delay + dep_delay) < 0 )] %>% head()
flights[origin == "JFK" & month == 6L,
.(m_arr = mean(arr_delay), m_dep = mean(dep_delay))] %>%
head()
## data.table way
flights[, .(dd = mean(dep_delay))]
## equivalent tidyverse way
flights_tib %>%
summarize(dd = mean(dep_delay))
## data.table way
flights[, .(dd = mean(dep_delay), ad = mean(arr_delay))]
## equivalent tidyverse way
flights_tib %>%
summarize(dd = mean(dep_delay), ad = mean(arr_delay))
## data.table way
flights[, .(.N)]
flights[origin == "JFK" & month == 6L, .N]# no .() so returns a vector
## equivalent tidyverse way
flights_tib %>%
count()
## data.table way
flights[, .(dd = mean(dep_delay)) , by = .(origin)]
## equivalent tidyverse way
flights_tib %>%
group_by(origin) %>%
summarize(dd = mean(dep_delay))
## data.table way
flights[, .(dd = mean(dep_delay), .N), by = .(origin, carrier)]
## equivalent tidyverse way
flights_tib %>%
group_by(origin, carrier) %>%
summarize(dd = mean(dep_delay), N = n())
flights[, .(dd = mean(dep_delay), .N), keyby = .(origin, carrier)]
flights[, .(max(dep_delay), max(arr_delay)), by = .(origin, carrier)] %>% head()
flights[, .(med_air_time = median(air_time)), by = .(month)]
flights[carrier == "DL", .(n_trips = .N), by = .(origin)]
flights[month %in% c(1, 2), .(mean_dep_delay=mean(dep_delay)), by = .(month, origin)]
flights[carrier == "AA", .N, by = .(origin, dest)][order(origin, -dest)]
flights[, "speed" := .(distance / air_time * 60)]
flights
flights[, "speed" := NULL]
flights
sort(unique(flights$hour))
sort(unique(flights_tib$hour))
sort(unique(flights$hour))
sort(unique(flights_tib$hour))
## data.table way
flights[hour == 24L, hour := 0L]
## equivalent tidyverse way
flights_tib %>%
mutate(hour = recode(hour, `24` = 0L)) ->
flights_tib
sort(unique(flights$hour))
sort(unique(flights_tib$hour))
sort(unique(flights$hour))
sort(unique(flights_tib$hour))
klippy::klippy()
set.seed(1)
knitr::opts_chunk$set(echo       = TRUE,
fig.height = 3,
fig.width  = 6,
fig.align  = "center")
ggplot2::theme_set(ggplot2::theme_bw())
library(tidyverse)
library(data.table)
inputf <- if (file.exists("./data/flights14.csv")) {
"./data/flights14.csv"
} else {
"https://raw.githubusercontent.com/Rdatatable/data.table/master/vignettes/flights14.csv"
}
start_time <- Sys.time()
flights <- fread(inputf)
end_time = Sys.time()
times <- tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time))
class(flights)
start_time <- Sys.time()
flights_tib <- read_csv(inputf)
end_time = Sys.time()
times <- bind_rows(times,tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time)))
round(100*(times[2,3]-times[1,3])/times[1,3],1)
inspectdf::inspect_mem(flights, df2 = flights_tib, show_plot = FALSE)
class(flights_tib)
inputf2 <- "../../../Data_Sets/BPD_crime_files/BPD_Part_1_Victim_Based_Crime_Data.csv"
start_time <- Sys.time()
bpd_crime <- fread(inputf2)
end_time = Sys.time()
times2 <- tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time))
start_time <- Sys.time()
bpd_crime_tib <- read_csv(inputf2)
end_time = Sys.time()
times2 <- bind_rows(times2,tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time)))
round(100*(times2[2,3]-times2[1,3])/times2[1,3],1)
inspectdf::inspect_mem(bpd_crime, df2 = bpd_crime_tib, show_plot = FALSE)
rm(inputf2, bpd_crime,bpd_crime_tib, end_time, start_time)
temp_dt <- as.data.table(flights_tib)
class(temp_dt)
rm(temp_dt)
## data.table way
flights[origin == "JFK" & dest == "LAX"]
## equivalent tidyverse way
flights_tib %>%
filter(origin == "JFK", dest == "LAX")
## data.table way
flights[c(1, 3, 207)]
## equivalent tidyverse way
flights_tib %>%
slice(1, 3, 207)
## data.table way
flights[order(origin, -dest)]
## equivalent tidyverse way
flights_tib %>%
arrange(origin, desc(dest))
## data.table way
fl1 <- flights[origin == "EWR" | origin == "LGA"]
fl1[order(-dep_delay)]
## equivalent tidyverse way
flights_tib %>%
filter(origin == "EWR" | origin == "LGA") %>%
arrange(desc(dep_delay))
flights[,dest] %>% glimpse()
flights[,.(dest)] %>% str()
## data.table way
flights[, .(origin, dest)]
## Or
flights[, list(origin, dest)]
## equivalent tidyverse way
flights_tib %>%
select(origin, dest)
flights[, c("origin", "dest")]
flights[, origin:dest]
keep_vec <- c("origin", "dest")
flights[, ..keep_vec] %>% head()
flights[, keep_vec, with = FALSE] %>% head()
flights[, .(delay_arr = arr_delay, delay_dep = dep_delay)] %>% head()
flights[, !c("year", "month")] %>% head()
flights[, -(year:month)]  %>% head()
flights[, .(year, month, day, hour)]
flights[origin == "JFK", .(dep_delay)]
flights[, sum( (arr_delay + dep_delay) < 0 )] %>% head()
flights[origin == "JFK" & month == 6L,
.(m_arr = mean(arr_delay), m_dep = mean(dep_delay))] %>%
head()
## data.table way
flights[, .(dd = mean(dep_delay))]
## equivalent tidyverse way
flights_tib %>%
summarize(dd = mean(dep_delay))
## data.table way
flights[, .(dd = mean(dep_delay), ad = mean(arr_delay))]
## equivalent tidyverse way
flights_tib %>%
summarize(dd = mean(dep_delay), ad = mean(arr_delay))
## data.table way
flights[, .(.N)]
flights[origin == "JFK" & month == 6L, .N]# no .() so returns a vector
## equivalent tidyverse way
flights_tib %>%
count()
## data.table way
flights[, .(dd = mean(dep_delay)) , by = .(origin)]
## equivalent tidyverse way
flights_tib %>%
group_by(origin) %>%
summarize(dd = mean(dep_delay))
## data.table way
flights[, .(dd = mean(dep_delay), .N), by = .(origin, carrier)]
## equivalent tidyverse way
flights_tib %>%
group_by(origin, carrier) %>%
summarize(dd = mean(dep_delay), N = n())
flights[, .(dd = mean(dep_delay), .N), keyby = .(origin, carrier)]
flights[, .(max(dep_delay), max(arr_delay)), by = .(origin, carrier)] %>% head()
flights[, .(med_air_time = median(air_time)), by = .(month)]
flights[carrier == "DL", .(n_trips = .N), by = .(origin)]
flights[month %in% c(1, 2), .(mean_dep_delay=mean(dep_delay)), by = .(month, origin)]
flights[carrier == "AA", .N, by = .(origin, dest)][order(origin, -dest)]
flights[, "speed" := .(distance / air_time * 60)]
flights
flights[, "speed" := NULL]
flights
library(tidyverse)
library(data.table)
inputf <- if (file.exists("./data/flights14.csv")) {
"./data/flights14.csv"
} else {
"https://raw.githubusercontent.com/Rdatatable/data.table/master/vignettes/flights14.csv"
}
start_time <- Sys.time()
flights <- fread(inputf)
end_time = Sys.time()
times <- tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time))
class(flights)
start_time <- Sys.time()
flights_tib <- read_csv(inputf)
end_time = Sys.time()
times <- bind_rows(times,tibble(start = start_time, end = end_time,
elapsed = lubridate::as.duration(end_time - start_time)))
round(100*(times[2,3]-times[1,3])/times[1,3],1)
inspectdf::inspect_mem(flights, df2 = flights_tib, show_plot = FALSE)
## data.table way
flights[origin == "JFK" & dest == "LAX"]
## equivalent tidyverse way
flights_tib %>%
filter(origin == "JFK", dest == "LAX")
## data.table way
fl1 <- flights[origin == "EWR" | origin == "LGA"]
fl1[order(-dep_delay)]
## equivalent tidyverse way
flights_tib %>%
filter(origin == "EWR" | origin == "LGA") %>%
arrange(desc(dep_delay))
## data.table way
fl1 <- flights[origin == "EWR" | origin == "LGA"]
fl1[order(-dep_delay)]
## equivalent tidyverse way
flights_tib %>%
filter(origin == "EWR" | origin == "LGA") %>%
arrange(desc(dep_delay))
## data.table way
fl1 <- flights[origin == "EWR" | origin == "LGA"]
fl1[order(-dep_delay)]
## equivalent tidyverse way
flights_tib %>%
filter(origin == "EWR" | origin == "LGA") %>%
arrange(desc(dep_delay))
flights[origin == "JFK", .(dep_delay)]
