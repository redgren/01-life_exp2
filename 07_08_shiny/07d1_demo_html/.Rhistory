),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
fluidRow(title = "Inputs",
column(6,
varSelectInput("var1", "Variable 1", data = iris),
varSelectInput("var2", "Variable 2",
selected  = iris$Petal.Length, data = iris)
),
column(6
)
),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
fluidRow(title = "Inputs",
column(6,
varSelectInput("var1", "Variable 1",
selected  = iris$Petal.Length,data = iris),
varSelectInput("var2", "Variable 2",
selected  = iris$Petal.Length, data = iris)
),
column(6
)
),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
fluidRow(title = "Inputs",
column(6,
varSelectInput("var1", "Variable 1",
selected  = !!iris$Petal.Length,data = iris),
varSelectInput("var2", "Variable 2",
selected  = !!iris$Petal.Length, data = iris)
),
column(6
)
),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
fluidRow(title = "Inputs",
column(6,
varSelectInput("var1", "Variable 1",
selected  = iris$Petal.Length,data = iris),
varSelectInput("var2", "Variable 2",
selected  = !!iris$Petal.Length, data = iris)
),
column(6
)
),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
fluidRow(title = "Inputs",
column(6,
varSelectInput("var1", "Variable 1",
data = iris, selected  = iris$Petal.Length),
varSelectInput("var2", "Variable 2",
selected  = !!iris$Petal.Length, data = iris)
),
column(6
)
),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
fluidRow(title = "Inputs",
column(6,
varSelectInput("var1", "Variable 1",
data = iris, selected  = iris$Petal.Length),
varSelectInput("var2", "Variable 2",
data = iris, selected  = "fish")
),
column(6
)
),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
input$var2
runApp('tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
view(ui)
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
View(server)
View(server)
View(server)
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
runApp('STAT-413-613/Lectures_All/07_08_shiny/tesst.R')
library(shiny)
library(ggplot2)
ui <- fluidPage(
fluidRow(title = "Inputs",
column(6,
varSelectInput("var1", "Variable 1",
data = iris, selected  = iris$Petal.Length),
varSelectInput("var2", "Variable 2",
data = iris, selected  = "fish")
),
column(6
)
),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
fluidRow(title = "Inputs",
column(6,
varSelectInput("var1", "Variable 1",
data = iris),
varSelectInput("var2", "Variable 2",
data = iris)
),
column(6
)
),
fluidRow(title = "Outputs",
column(6
),
column(6,
plotOutput("plot")
)
)
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(iris, aes(x = !!input$var1, y = !!input$var2, color = !!iris$Species)) +
geom_point()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
varSelectInput("var1", "Variable 1", data = mtcars),
varSelectInput("var2", "Variable 2", data = mtcars),
sliderInput("bins", "Number of Bins", min = 1, max = 50, value = 20)
),
mainPanel(
tabsetPanel(
tabPanel("Scatterplot",
plotOutput("plot1")
),
tabPanel("Histogram of Variable 1",
plotOutput("plot2")
),
tabPanel("Histogram of Variable 2",
plotOutput("plot3")
)
)
)
)
)
server <- function(input, output) {
output$plot1 <- renderPlot({
ggplot(mtcars, aes(x = !!input$var1, y = !!input$var2)) +
geom_point()
})
output$plot2 <- renderPlot({
ggplot(mtcars, aes(x = !!input$var1)) +
geom_histogram(bins = input$bins)
})
output$plot3 <- renderPlot({
ggplot(mtcars, aes(x = !!input$var2)) +
geom_histogram(bins = input$bins)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
varSelectInput("var", "Variable", data = iris),
sliderInput("bins", "Bin Width", min = 1, max = 50, value = 20),
sliderInput("bw", "Band Width", min = 0.01, max = 0.5, value = 0.25)
),
mainPanel(
tabsetPanel(
tabPanel("Histogram",
plotOutput("hist")
),
tabPanel("Density",
plotOutput("density")
),
tabPanel("Boxplot",
plotOutput("box")
)
)
)
)
)
server <- function(input, output) {
output$hist <- renderPlot({
ggplot(iris, aes(x = !!input$var)) +
geom_histogram(bins = input$bins)
})
output$density <- renderPlot({
ggplot(iris, aes(x = !!input$var)) +
geom_density(bw = input$bw)
})
output$box <- renderPlot({
ggplot(iris, aes(y = !!input$var)) +
geom_boxplot()
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
wellPanel(
sliderInput("bins", "How many bins?", min = 1, max = 50, value = 20),
plotOutput("hist")
)
)
server <- function(input, output, session) {
output$hist <- renderPlot({
ggplot(mtcars, aes(x = mpg)) +
geom_histogram(bins = input$bins)
})
}
shinyApp(ui, server)
create_theme(
theme = "default",
bs_vars_color(
gray_base = "#354e5c",
),
bs_vars_wells(
bg = "#FFF",
border = "#3f2d54"
),
bs_vars_global(
body_bg = "#e5ffe5"
),
output_file = "www/mytheme.css"
)
library(fresh)
create_theme(
theme = "default",
bs_vars_color(
gray_base = "#354e5c",
),
bs_vars_wells(
bg = "#FFF",
border = "#3f2d54"
),
bs_vars_global(
body_bg = "#e5ffe5"
),
output_file = "www/mytheme.css"
)
library(shiny)
library(shinythemes)
library(fresh)
library(ggplot2)
create_theme(
theme = "default",
bs_vars_color(
gray_base = "#354e5c",
),
bs_vars_wells(
bg = "#FFF",
border = "#3f2d54"
),
bs_vars_global(
body_bg = "#e5ffe5"
),
output_file = "www/mytheme.css"
)
ui <- fluidPage(
theme = "mytheme.css",
titlePanel("Old Faithful Geyser Data"),
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput("distPlot")
)
)
)
server <- function(input, output) {
output$distPlot <- renderPlot({
ggplot(faithful, aes(x = waiting)) +
geom_histogram(bins = input$bins) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
runApp('STAT-413-613/Lectures_All/07_08_shiny/07c1_demo_theme_css')
set.seed(1)
knitr::opts_chunk$set(echo       = TRUE,
fig.height = 3,
fig.width  = 6,
fig.align  = "center")
ggplot2::theme_set(ggplot2::theme_bw())
library(shiny)
ui <- fluidPage(
tags$img(src = "https://upload.wikimedia.org/wikipedia/commons/c/c6/American_University_logo.svg")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$img(src = "AU-Logo-on-white-small.png")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$img(src = "AU-Logo-on-white-small.png")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
runApp('7d1_demo_html_www.R')
library(shiny)
ui <- fluidPage(
tags$img(src = "AU-Logo-on-white-small.png")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
runApp('7d1_demo_html')
runApp('7d1_demo_html')
runApp('7d1_demo_html')
runApp('STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html')
runApp('STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html')
runApp('STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html')
runApp('STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html')
runApp('STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html')
runApp('STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html')
runApp('STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html')
runApp('STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html')
setwd("~/OneDrive - american.edu/Courses/STAT-413-613/Lectures_All/07_08_shiny/7d1_demo_html")
runApp()
runApp()
runApp()
runApp()
runApp()
http://127.0.0.1:5789/www.20191011_Early_Fall.mp4
http://127.0.0.1:5789/www/20191011_Early_Fall.mp4
./www/20191011_Early_Fall.mp4
"./www/20191011_Early_Fall.mp4
.
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyApp(ui, server)
runApp('~/OneDrive - american.edu/Courses/STAT-413-613/Lectures_All/07_08_shiny/Untitled.R')
